---
Comment: A step function to send reminder emails after 24hrs
StartAt: addEmailToDb
States:
  addEmailToDb:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: {"Fn::Join": [":", ["arn:aws:lambda:eu-east-1", { "Ref":"AWS::AccountId"}, "function:${self:service}-${self:provider.state}-addSignup}"]]}
      Payload:
        Input.$: "$"
    Next: wait for 24hr
  wait for 24hr:
    Type: Wait
    Seconds: 86400
    Next: Read DB
  Read DB:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: {"Fn::Join": [":", ["arn:aws:lambda:eu-east-1", { "Ref":"AWS::AccountId"}, "function:${self:service}-${self:provider.state}-getSignup}"]]}
      Payload:
        Input.$: "$" 
    Next: has played
  has played:
    Type: Choice
    Choices:
    - Not:
        Variable: "$.type"
        StringEquals: Private
      Next: close
    Default: send reminder email
  send reminder email:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: {"Fn::Join": [":", ["arn:aws:lambda:eu-east-1", { "Ref":"AWS::AccountId"}, "function:${self:service}-${self:provider.state}-sendReminderEmail}"]]}
      Payload:
        Input.$: "$"
    Next: close
  close:
    Type: Succeed