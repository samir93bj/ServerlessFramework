service: myserverlessproject
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    tableName: ${self:custom.tableName}
    bucketName: ${self:custom.bucketName}
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
        - s3:*
      Resource: '*' 
  apiGateway:
    apiKeys:
      - MyFirstApiKey
    usagePlan:
      quota:
        limit: 1000
        period: MONTH
      throttle:
        rateLimit: 5
        burstLimit: 20

plugins:
  - serverless-s3-sync
  - serverless-offline
  - serverless-webpack

package: 
  individually: true

custom:
  tableName: player-points
  bucketName: server1essprojectupload-22321321321
  s3Sync:
    - bucketName: server1essprojectupload-22321321321
      localDir: UploadData
  
functions:
  helloWorld:
    handler: handler.hello
    events:
      - http:
          path: helloWorld
          method: GET

  getUser:
    handler: lambdas/endpoints/getUser.handler
    events:
      - http:
            path: get-user/{ID}
            method: GET
            cors: true
            private: true

  getPlayerScore:
    handler: lambdas/endpoints/getPlayerScore.handler
    events:
      - http:
            path: get-player-score/{ID}
            method: GET
            cors: true
            private: true

  createPlayerScore:
    handler: lambdas/endpoints/createPlayerScore.handler
    events:
      - http:
            path: create-player-score/{ID}
            method: POST
            cors: true
            private: true

  createFile:
      handler: lambdas/endpoints/createFile.handler
      events:
        - http:
              path: create-file/{fileName}
              method: POST
              cors: true
              private: true
  
  getFile:
      handler: lambdas/endpoints/getFile.handler
      events:
        - http:
              path: get-file/{fileName}
              method: GET
              cors: true
              private: true

resources:
  Resources:
    DemoBucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: server1essprojectupload-22321321321
    
    MyDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        
        
